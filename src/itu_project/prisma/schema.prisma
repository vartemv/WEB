generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model orders {
  id               Int      @id @default(autoincrement())
  item             String   @db.VarChar(255)
  name             String   @db.VarChar(100)
  address          String   @db.VarChar(255)
  status           String   @db.VarChar(15)
  price            Int
  order_date       String   @db.VarChar(13)
  could_be_printed Boolean?
}

model items {
  id              Int    @id @default(autoincrement())
  name            String @db.VarChar(100)
  category        String @db.VarChar(100)
  price           Int
  quantity        Int
  min_stock_level Int
}

model devices {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(100)
  occupied Boolean? @default(false)
  photo    String?
}

model ChartSetting {
  id        Int         @id @default(autoincrement())
  charttype String      @db.VarChar(50)
  year      String      @db.VarChar(4)
  month     String      @db.VarChar(20)
  itemtype  String      @db.VarChar(50)
  createdat DateTime?   @default(now()) @db.Timestamp(6)
  notes     ChartNote[]

  @@map("chart_settings")
}

model ChartNote {
  id         Int          @id @default(autoincrement())
  chart_id   Int
  note       String
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  chart      ChartSetting @relation(fields: [chart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("chart_notes")
}
