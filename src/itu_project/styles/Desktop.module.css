.ItemName {
    font-size: 22px;
    color: #333;
}
.ClientName {
    font-size: 22px;
    color: #333;
}
.ClientAddress {
    font-size: 22px;
    color: #333;
}
.OrderId {
    position: absolute;
    bottom: 5%; /* Adjust based on the spacing required */
    left: 50%; /* Center the OrderId horizontally */
    transform: translateX(-50%); /* Ensure perfect horizontal centering */
    font-size: 16px;
    
    color: #333;
    text-align: center;
}
.MarketplaceIcon {
    position: absolute;
    top: 0px;
    left: 4px;
    width: 50px;
    height: auto;
    object-fit: contain;
    filter: drop-shadow(3px 5px 15px rgb(0 0 0 / 0.2));
}
.StatusWrapper {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: var(--active-color);
    padding: 10px 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50px;
    box-shadow: 4px 5px 15px rgba(0, 0, 0, 0.1);
}
.Status {
    color: #000;
    font-size: 25px;
    text-align: center;
}
.UserPicture {
    width: 80%;
    position: relative;
    border-radius: 50%;
    height: auto;
    object-fit: cover;
}
.homeIcon {
    width: 100%; /* Ensures the icon takes up the available width in the grid item */
    height: auto; /* Keeps aspect ratio consistent */ /* Restricts maximum width to prevent oversized icons */
    object-fit: contain; /* Ensures the whole icon fits without distortion */
    max-width: 45px;
}

.spacer {
    flex-grow: 1; /* Takes up available space between .dashboardChild and .iconsGroup */
}

.iconsGroup{
    
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    gap: 50px;
}

.dashboard {
    position: fixed;
    top: 0px;
    left: 0px;
    background-color:#fef7ff;
    width: 3vw;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex;
    padding: 10px 0px 1px;
    box-sizing: border-box;
    gap: 100px;
    box-shadow: 4px 0px 15px rgba(0, 0, 0, 0.2);
}


.notActiveWrapper {
    border-radius: 0px 50px 50px 0px;
    background-color: #64558f;
    width: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease, color 0.3s ease;
}
.allWrapper {
    border-radius: 50px 0px 0px 50px;
    background-color: #64558f;
    width: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease, color 0.3s ease;
} 
.activeWrapper {
    background-color: #64558f;
    /* border-right: 1px solid var(--background-color);
    border-left: 1px solid var(--background-color); */
    width: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease, color 0.3s ease;
}

.ChoosedFilter{
    background-color: #483d8b; /* Darker shade for active */
    color: #fff; /* White text when active */
    transform: scale(1.02); /* Slightly larger when active */
    
}

.filters {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50px;
  position: fixed;
  top: 2%;
  width: 30%;
  left: 35%;
  align-self: center;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
  color: var(--background-color);
  gap: 3px;
}

.PlusWrapper {
    width: 77px;
    position: absolute;
    margin: 0 !important;
    top: 0px;
    left: 0px;
    border-radius: 50%;
    background-color: var(--add-button-color);
    height: 74px;
    z-index: 0;
}

.plusIcon {
    width: 65px;
    position: fixed;
    height: 66px;
    object-fit: cover;
    z-index: 1;
}

.add {
    position: fixed;
    top: 7px;
    left: 93%;
    width: 77px;
    height: 74px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    padding: 4px 6px;
    box-sizing: border-box;
    gap: 10px;
    cursor: pointer;
}

.TextGrid {
    display: grid;
    row-gap: 10px;
    align-items: center;
    justify-items: start;
    margin-left: 5%; /* Adjust left margin for centering */
    margin-bottom: 10px; /* Add some space below the TextGrid */
    position: absolute;
    top: 50%; /* Vertically center */
    transform: translateY(-50%); /* Adjust for perfect vertical centering */
}

.ItemCont {
    display: flex;
    align-items: center;
    gap: 10px; /* Space between icon and text */
}

.TextGridIcon {
    width: 24px; /* Adjust icon size */
    height: 24px;
    object-fit: contain; /* Ensure icon maintains aspect ratio */
}

.Separator {
    width: 80%; /* Adjust width as needed */
    height: 1px; /* Make the line thinner */
    background: linear-gradient(to right, rgba(57, 52, 52, 0) 0%, rgb(120, 105, 105) 50%, rgba(89, 76, 76, 0) 100%);
    margin: 0 auto; /* Center it horizontally */
    position: absolute;
    bottom: 50px; /* Position at the bottom of the container */
    left: 0;
    right: 0;
    border: none; 
}

.desktop1 {
    width: 100vw;
    height: 100vw;
    position: relative;
    background-color: var(--background-color);
    overflow: hidden;
    text-align: left;
    font-size: 20px;
    color: var(--text-color);
    font-family: Inter;
    padding-left: 70px;
    overflow-y: auto;
}

.order {
    border-radius: 50px;
    background-color: var(--card-bg-color);
    flex: 0 0 19vw;
    position: relative; /* or fixed */   /* 10% of the viewport height */
    height: 19vw; /* Adjust height automatically */
    cursor: pointer;
    width: 19vw;
    min-width: 300px; /* Minimum width */
    min-height: 300px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
}

.OrdersGrid
{
    display: flex;
    flex-wrap: wrap; 
    gap: 1.5em; 
    margin-top: 5%; 
    margin-left: 7%;
    width: 94vw; 
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    padding-bottom: 3%;
    
}